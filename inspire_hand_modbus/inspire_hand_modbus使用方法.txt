1.inspire_hand包支持因时机器人公司的灵巧手与机械夹爪在ROS平台上的使用，我们只在ros noetic环境下进行了测试，其他ros环境需要等待我们后续的测试。
2.为了使程序能够正常运行，需要执行以下环境配置操作：（首次执行的需要，配置好了就不需要了）
    1）安装ros-noetic环境，具体安装方式如下：
       （1）配置Ubuntu的资源库（系统设置->软件和更新）："restricted"，"universe"和"multiverse"。
       （2）设置Ubuntu的sources.list。终端指令：sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
       （3）设置key。终端指令：sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
       
       hkp://pgp.mit.edu:80     
       
      curl -sSL 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xC1CF6E31E6BADE8868B172B4F42ED6FBAB17C654' | sudo apt-key add -
       （4）安装。终端指令：sudo apt-get update
                           sudo apt-get install ros-noetic-desktop-full  
       （5）初始化 rosdep。终端指令：sudo rosdep init
                                    rosdep update
       （6）配置环境。终端指令：echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
                              source ~/.bashrc
       （7）安装build依赖。终端指令：sudo apt-get install python-rosinstall python-rosinstall-generator python-wstool build-essential


    2）创建catkin工作目录
       终端指令：mkdir -p ~/inspire_hand_ws/src
                cd ~/inspire_hand_ws/src
                catkin_init_workspace
                cd ~/inspire_hand_ws/
                catkin_make
                source devel/setup.bash  (在每一个终端启动时使用，帮助你找到ROS安装目录)
    3）将inspire_hand.zip 放到inspire_hand_ws目录下的/src文件夹下，解压
       终端指令：cd ~/inspire_hand_ws/src
                 unzip inspire_hand
    4) 安装本安装包所需要的依赖
       终端指令：cd ~/inspire_hand_ws
                rosdep install --from-paths src --ignore-src --rosdistro=noetic -y
    5）对安装包进行重新编译
       终端指令：catkin_make
3.1 灵巧手使用
    1）将灵巧手与电脑连接，查看连接端口名称。
       终端指令：dmesg|grep tty*（端口名称应该会显示ttyUSB0或者是ttyUSB1、ttyUSB2等）
    2）对端口进行权限设置，可以选择临时方案或者是永久方案
        (1) 临时方案（每次使用都需要设置）。终端指令：sudo chmod a+rw /dev/ttyUSB*（* 是串口号）
        (2) 永久方案。终端指令：sudo vim -p /etc/udev/rules.d/70-ttyUSB.rules 在打开的文件中输入：KERNEL=="ttyUSB*", OWNER="root", GROUP="root", MODE="0666" 保存关闭之后，重启电脑即可。（注意KERNEL=="ttyUSB*",这里的*不是串口号就是*）
    3) 下面就是正式启动命令。使用launch命令来启动程序：
        (1) 如果串口名称是默认的ttyUSB0。终端指令：cd ~/catkin_ws_hand_485
                                                 source devel/setup.bash
         
                                                 roslaunch inspire_hand hand_control.launch test_flag:=1
        (2) 如果串口名称非默认的ttyUSB0。终端指令：cd ~/catkin_ws_hand_485
                                                 source devel/setup.bash
                                                 
                                                 roslaunch inspire_hand hand_control.launch port:=/dev/ttyUSB* test_flag:=1 （* 是串口号）

    4) 开始使用inspire_hand_modbus功能包
       注意： 需要重新打开一个新的终端，并执行终端指令： cd ~/inspire_hand_ws/src/inspire_hand_modbus/build
                                                     source devel/setup.bash
                                                     roscore
                                                     ./hand_modbus_control 
	(1)设置ID------id范围1-254
	rosservice call /inspire_hand_modbus/set_id "{id: 1}"

	(2)设置波特率------参数redu_ratio范围0-4
	rosservice call /inspire_hand_modbus/set_redu_ratio "{redu_ratio: 0}" 

	(3)设置六个驱动器位置------参数pos范围0-2000 
	rosservice call /inspire_hand_modbus/set_pos "{pos0: 1000, pos1: 1000, pos2: 1000, pos3: 1000, pos4: 1000, pos5: 1000}"

	(4)设置速度------参数speed范围0-1000
	rosservice call /inspire_hand_modbus/set_speed "{speed0: 1000, speed1: 1000, speed2: 1000, speed3: 1000, speed4: 1000, speed5: 1000}"

	(5)设置灵巧手角度------参数angle范围0-1000
	rosservice call /inspire_hand_modbus/set_angle "{angle0: 1000, angle1: 1000, angle2: 1000, angle3: 1000, angle4: 1000, angle5: 1000}"

	(6)设置力控阈值------参数force范围0-1000
	rosservice call /inspire_hand_modbus/set_force "{force0: 1000, force1: 1000, force2: 1000, force3: 1000, force4: 1000, force5: 1000}"

	(7)设置电流阈值------参数current范围0-1500
	rosservice call /inspire_hand_modbus/set_current_limit "{current0: 1500, current1: 1500, current2: 1500, current3: 1500, current4: 1500, current5: 1500}"

	(8)设置上电速度------参数speed范围0-1000(断电后重新上电后执行)
	rosservice call /inspire_hand_modbus/set_default_speed "{speed0: 1000, speed1: 1000, speed2: 1000, speed3: 1000, speed4: 1000, speed5: 1000}"

	(9)设置上电力控阈值------参数force范围0-1000(断电后重新上电后执行)
	rosservice call /inspire_hand_modbus/set_default_force "{force0: 1000, force1: 1000, force2: 1000, force3: 1000, force4: 1000, force5: 1000}"

	(10)设置上电电流阈值------参数current范围0-1500(断电后重新上电后执行)
	rosservice call /inspire_hand_modbus/set_default_current_limit "{current0: 1500, current1: 1500, current2: 1500, current3: 1500, current4: 1500, current5: 1500}"

	(11)力传感器校准------此命令需执行两次（执行后手掌将完全张开，随后进行力校准）
	rosservice call /inspire_hand_modbus/set_force_clb 

	(12)灵巧手清除错误
	rosservice call /inspire_hand_modbus/set_clear_error 

	(13)恢复出厂设置
	rosservice call /inspire_hand_modbus/set_reset_para 

	(14)保存参数到FLASH
	rosservice call /inspire_hand_modbus/set_save_flash 

	(15)读取驱动器设置的位置值
	rosservice call /inspire_hand_modbus/get_pos_set 

	(16)读取设置的灵巧手角度值
	rosservice call /inspire_hand_modbus/get_angle_set 

	(17)读取设置的力控阈值
	rosservice call /inspire_hand_modbus/get_force_set 

	(18)读取当前电流值
	rosservice call /inspire_hand_modbus/get_current

	(19)读取驱动器实际的位置值
	rosservice call /inspire_hand_modbus/get_pos_act 

	(20)读取实际的的灵巧手角度值
	rosservice call /inspire_hand_modbus/get_angle_act

	(21)读取实际的受力
	rosservice call /inspire_hand_modbus/get_force_act 

	(22)读取温度信息
	rosservice call /inspire_hand_modbus/get_temp

	(23)读取故障信息
	rosservice call /inspire_hand_modbus/get_error

    5)ros topic使用示例：实时读取灵巧手触觉传感器数据
     需要重新打开一个新的终端，并执行终端指令：cd ~/inspire_hand_ws/src/inspire_hand_modbus/build
                                            source devel/setup.bash
                                            roscore
                                            ./handcontroltopicpublisher_modbus
